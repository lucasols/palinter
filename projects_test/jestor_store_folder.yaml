analyze_content_of_files_types: ['ts', 'tsx']

./:
  /stores:
    has_files_in_root:
      - collectionStore.example.ts
      - documentStore.example.ts
      - listQueryStore.example.ts
    rules:
      - if_file: any
        not_touch: true
        expect:
          name_case_is: camelCase

      - if_folder: any
        expect:
          name_case_is: camelCase

      - if_file:
          has_name: '*(Doc|List|Collection|Store).(actions|utils).ts'
        expect:
          has_sibling_file: '${1}${2}.ts'
          content_matches: regex:from '(.+)/${1}${2}'
          error_msg: auxiliar store files should import and use the store

      - if_file:
          has_name: '*Doc.ts'
        expect:
          error_msg: More than one store found. Each store should have it's own file
          content_matches:
            - export const ${1}Doc = createApiDocumentStore<
            - any:
                - = createApiDocumentStore
                - = createApiCollectionStore
                - = createApiListQueryStore
                - = new Store
              at_most: 1

      - if_file:
          has_name: '*List.ts'
        expect:
          - error_msg: More than one store found. Each store should have it's own file
            content_matches:
              - any:
                  - = createApiDocumentStore
                  - = createApiCollectionStore
                  - = createApiListQueryStore
                  - = new Store
                at_most: 1
          - error_msg: ListQueryStores instances should be named with the store name + 'List'
            content_matches:
              - export const ${1}List = createApiListQueryStore<

      - if_file:
          has_name: '*Collection.ts'
        expect:
          error_msg: More than one store found. Each store should have it's own file
          content_matches:
            - export const ${1}Collection = createApiCollectionStore<
            - any:
                - = createApiDocumentStore
                - = createApiCollectionStore
                - = createApiListQueryStore
                - = new Store
              at_most: 1

      - if_file:
          has_name: '*Store.ts'
        expect:
          error_msg: More than one store found. Each store should have it's own file
          content_matches:
            - export const ${1}Store = new Store<
            - any:
                - = createApiDocumentStore
                - = createApiCollectionStore
                - = createApiListQueryStore
                - = new Store
              at_most: 1

      - if_folder:
          # Here we assure that the folder is not a group folder
          root_files_find_pattern:
            pattern: regex:(?P<base_name>.+)(Doc|Store|List).ts
            at_most: 1
        expect:
          name_is: '${base_name}${2}'

      - if_folder:
          root_files_find_pattern:
            pattern: regex:(?P<base_name>.+)(Doc|Store|List).ts
            at_least: 2
        expect:
          name_is_not: '${base_name}${2}'
