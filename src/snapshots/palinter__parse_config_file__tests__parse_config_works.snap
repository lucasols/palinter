---
source: src/parse_config_file.rs
expression: config
---
Ok(
    ParsedConfig {
        blocks: Some(
            {
                "react_file_name": File {
                    conditions: Conditions(
                        ParsedFileConditions {
                            has_extension: Some(
                                Single(
                                    "tsx",
                                ),
                            ),
                            has_name: None,
                            does_not_have_name: None,
                            wrong: {},
                        },
                    ),
                    expect: Conditions(
                        Multiple(
                            [
                                ParsedFileExpect {
                                    name_case_is: Some(
                                        "PascalCase",
                                    ),
                                    error_msg: Some(
                                        "React files name must be PascalCase",
                                    ),
                                    extension_is: None,
                                    wrong: {
                                        "name_not_includes_any": Sequence [
                                            String("."),
                                        ],
                                    },
                                },
                                ParsedFileExpect {
                                    name_case_is: None,
                                    error_msg: None,
                                    extension_is: None,
                                    wrong: {
                                        "content_matches_any": Sequence [
                                            String("regex:export const {{fileName}}:? "),
                                        ],
                                    },
                                },
                            ],
                        ),
                    ),
                    error_msg: None,
                    non_recursive: None,
                },
                "react_sub_file": File {
                    conditions: Conditions(
                        ParsedFileConditions {
                            has_extension: None,
                            has_name: Some(
                                Single(
                                    "*:PascalCase.(hooks|utils|style|types).ts",
                                ),
                            ),
                            does_not_have_name: None,
                            wrong: {},
                        },
                    ),
                    expect: Conditions(
                        Single(
                            ParsedFileExpect {
                                name_case_is: None,
                                error_msg: None,
                                extension_is: None,
                                wrong: {
                                    "has_sibling_file": String("{{1}}.tsx"),
                                },
                            },
                        ),
                    ),
                    error_msg: None,
                    non_recursive: None,
                },
            },
        ),
        global_rules: Some(
            [
                File {
                    conditions: Conditions(
                        ParsedFileConditions {
                            has_extension: Some(
                                Single(
                                    "svg",
                                ),
                            ),
                            has_name: None,
                            does_not_have_name: None,
                            wrong: {},
                        },
                    ),
                    expect: Conditions(
                        Single(
                            ParsedFileExpect {
                                name_case_is: Some(
                                    "kebab-case",
                                ),
                                error_msg: None,
                                extension_is: None,
                                wrong: {},
                            },
                        ),
                    ),
                    error_msg: Some(
                        "Svg files should be named in kebab-case",
                    ),
                    non_recursive: None,
                },
            ],
        ),
        to_have_files: None,
        root_folder: Ok(
            CorrectParsedFolderConfig {
                has_files: None,
                rules: None,
                folders: {
                    "/src": Ok(
                        CorrectParsedFolderConfig {
                            has_files: None,
                            rules: None,
                            folders: {
                                "/icons": Ok(
                                    CorrectParsedFolderConfig {
                                        has_files: None,
                                        rules: Some(
                                            [
                                                File {
                                                    conditions: Any(
                                                        "any",
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: Some(
                                                                    Single(
                                                                        "svg",
                                                                    ),
                                                                ),
                                                                wrong: {},
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: Some(
                                                        "Only svg files are allowed in /assets/icons",
                                                    ),
                                                    non_recursive: None,
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: None,
                                                            does_not_have_name: Some(
                                                                Single(
                                                                    "static-*.ts",
                                                                ),
                                                            ),
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Multiple(
                                                            [
                                                                ParsedFileExpect {
                                                                    name_case_is: None,
                                                                    error_msg: Some(
                                                                        "Svg should have at least one color set as `currentColor`, if the icon is static and don't have any dynamic color prefix the name with `static-`",
                                                                    ),
                                                                    extension_is: None,
                                                                    wrong: {
                                                                        "content_matches_any": Sequence [
                                                                            String("currentColor"),
                                                                        ],
                                                                    },
                                                                },
                                                                ParsedFileExpect {
                                                                    name_case_is: None,
                                                                    error_msg: Some(
                                                                        "Svg should have a viewBox attribute with 24x24 or 48x48, check if you are exporting the correct svg from figma",
                                                                    ),
                                                                    extension_is: None,
                                                                    wrong: {
                                                                        "content_matches_any": Sequence [
                                                                            String("viewBox=\"0 0 24 24\""),
                                                                            String("viewBox=\"0 0 48 48\""),
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                            ],
                                        ),
                                        folders: {},
                                    },
                                ),
                                "/pages": Ok(
                                    CorrectParsedFolderConfig {
                                        has_files: None,
                                        rules: Some(
                                            [
                                                OneOf {
                                                    rules: [
                                                        Block(
                                                            "react_component",
                                                        ),
                                                        File {
                                                            conditions: Conditions(
                                                                ParsedFileConditions {
                                                                    has_extension: Some(
                                                                        Single(
                                                                            "tsx",
                                                                        ),
                                                                    ),
                                                                    has_name: None,
                                                                    does_not_have_name: None,
                                                                    wrong: {},
                                                                },
                                                            ),
                                                            expect: Conditions(
                                                                Multiple(
                                                                    [
                                                                        ParsedFileExpect {
                                                                            name_case_is: Some(
                                                                                "kebab-case",
                                                                            ),
                                                                            error_msg: Some(
                                                                                "React files name must be PascalCase",
                                                                            ),
                                                                            extension_is: None,
                                                                            wrong: {
                                                                                "name_not_includes_any": Sequence [
                                                                                    String("."),
                                                                                ],
                                                                            },
                                                                        },
                                                                        ParsedFileExpect {
                                                                            name_case_is: None,
                                                                            error_msg: None,
                                                                            extension_is: None,
                                                                            wrong: {
                                                                                "content_matches_any": Sequence [
                                                                                    String("line_regex:^export const {{fileName:PascalCase}}Page:? "),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                ),
                                                            ),
                                                            error_msg: None,
                                                            non_recursive: None,
                                                        },
                                                    ],
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: Some(
                                                                Single(
                                                                    "*:kebab-case.(hooks|utils|style|types).ts",
                                                                ),
                                                            ),
                                                            does_not_have_name: None,
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {
                                                                    "has_sibling_file": String("$1.tsx"),
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                Folder {
                                                    conditions: Conditions(
                                                        ParsedFolderConditions {
                                                            wrong: {
                                                                "has_name_case": String("PascalCase"),
                                                            },
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFolderExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                wrong: {
                                                                    "root_files": Mapping {
                                                                        "has": Sequence [
                                                                            String("{{parentFolder}}.tsx"),
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                Folder {
                                                    conditions: Conditions(
                                                        ParsedFolderConditions {
                                                            wrong: {
                                                                "has_name_case": String("camelCase"),
                                                            },
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFolderExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                wrong: {
                                                                    "root_files": Mapping {
                                                                        "does_not_have": Sequence [
                                                                            String("{{parentFolder as PascalCase}}.tsx"),
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                            ],
                                        ),
                                        folders: {
                                            "/_shell": Ok(
                                                CorrectParsedFolderConfig {
                                                    has_files: Some(
                                                        [
                                                            "Shell.tsx",
                                                        ],
                                                    ),
                                                    rules: None,
                                                    folders: {},
                                                },
                                            ),
                                        },
                                    },
                                ),
                                "/stores": Ok(
                                    CorrectParsedFolderConfig {
                                        has_files: Some(
                                            [
                                                "collectionStore.example.ts",
                                                "documentStore.example.ts",
                                                "listQueryStore.example.ts",
                                            ],
                                        ),
                                        rules: Some(
                                            [
                                                File {
                                                    conditions: Any(
                                                        "any",
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: Some(
                                                                    "camelCase",
                                                                ),
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {},
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                Folder {
                                                    conditions: Any(
                                                        "any",
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFolderExpect {
                                                                name_case_is: Some(
                                                                    "camelCase",
                                                                ),
                                                                error_msg: None,
                                                                wrong: {},
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: Some(
                                                                Single(
                                                                    "*Store.utils.ts",
                                                                ),
                                                            ),
                                                            does_not_have_name: None,
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {
                                                                    "has_sibling_file": String("$1Store.ts"),
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: Some(
                                                                Single(
                                                                    "*(Doc|List|Query).(utils|actions).ts",
                                                                ),
                                                            ),
                                                            does_not_have_name: None,
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {
                                                                    "has_sibling_file": String("$1$2.ts"),
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: Some(
                                                                Single(
                                                                    "*Doc.ts",
                                                                ),
                                                            ),
                                                            does_not_have_name: None,
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {
                                                                    "content_matches_any": Sequence [
                                                                        String("export const $1Doc = createDocumentStore<"),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: Some(
                                                                Single(
                                                                    "*List.ts",
                                                                ),
                                                            ),
                                                            does_not_have_name: None,
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {
                                                                    "content_matches_any": Sequence [
                                                                        String("export const {{1}}List = createListQueryStore<"),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                File {
                                                    conditions: Conditions(
                                                        ParsedFileConditions {
                                                            has_extension: None,
                                                            has_name: Some(
                                                                Single(
                                                                    "*Doc.ts",
                                                                ),
                                                            ),
                                                            does_not_have_name: None,
                                                            wrong: {},
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFileExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                extension_is: None,
                                                                wrong: {
                                                                    "content_matches_any": Sequence [
                                                                        String("export const $1Doc = createDocumentStore<"),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                                Folder {
                                                    conditions: Conditions(
                                                        ParsedFolderConditions {
                                                            wrong: {
                                                                "root_files": Mapping {
                                                                    "does_not_have_duplicate_name": String("regex:(?<baseName>.+)(Doc|Store|List).ts"),
                                                                },
                                                            },
                                                        },
                                                    ),
                                                    expect: Conditions(
                                                        Single(
                                                            ParsedFolderExpect {
                                                                name_case_is: None,
                                                                error_msg: None,
                                                                wrong: {
                                                                    "name_is": String("{{baseName}}"),
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                    error_msg: None,
                                                    non_recursive: None,
                                                },
                                            ],
                                        ),
                                        folders: {},
                                    },
                                ),
                            },
                        },
                    ),
                },
            },
        ),
    },
)
